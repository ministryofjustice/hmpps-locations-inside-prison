services:

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0
      - DELIUS_ENABLED=false
      - NOMIS_ENDPOINT_URL=http://nomis-user-roles-api:8080
      - NOMIS_ENABLED=true

  nomis-user-roles-api:
    image: quay.io/hmpps/nomis-user-roles-api:latest
    container_name: nomis-user-roles-api
    networks:
      - hmpps
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - API_BASE_URL_OAUTH=http://hmpps-auth:8080/auth

  manage-users-api:
    image: quay.io/hmpps/hmpps-manage-users-api:latest
    container_name: manage-users-api
    networks:
      - hmpps
    depends_on:
      - nomis-user-roles-api
      - hmpps-auth
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - HMPPS_AUTH_ENDPOINT_URL=http://hmpps-auth:8080/auth
      - HMPPS_AUTH_EXTERNAL_ENDPOINT_URL=http://localhost:8080/auth
      - NOMIS_ENDPOINT_URL=http://nomis-user-roles-api:8080
      - AUTHORIZATION_SERVER_TOKEN_ENDPOINT_URL=http://hmpps-auth:8080/auth/oauth/token

  locations-inside-prison-api:
    image: quay.io/hmpps/hmpps-locations-inside-prison-api:latest
    container_name: locations-inside-prison-api
    depends_on:
      - hmpps-auth
      - locations-inside-prison-db
      - localstack
    networks:
      - hmpps
    ports:
      - "8090:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=seed
      - API_BASE_URL_OAUTH=http://hmpps-auth:8080/auth
      - SPRING_DATASOURCE_URL=jdbc:postgresql://locations-inside-prison-db:5432/locations_inside_prison?sslmode=prefer
      - HMPPS_SQS_LOCALSTACK_URL=http://localstack:4566
      - API_BASE_URL_PRISONER_SEARCH=http://prisoner-search:8080
      - API_BASE_URL_PRISON_REGISTER=http://prison-register:8080
      - LOCATIONS_INSIDE_PRISON_API_CLIENT_ID=hmpps-locations-inside-prison-system
      - LOCATIONS_INSIDE_PRISON_API_CLIENT_SECRET=clientsecret

  localstack:
    image: localstack/localstack:stable
    networks:
      - hmpps
    container_name: localstack
    ports:
      - "4566:4566"
      - "8999:8080"
    environment:
      - DEBUG=${DEBUG- }
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  locations-inside-prison-db:
    image: postgres
    networks:
      - hmpps
    container_name: locations-inside-prison-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=locations_inside_prison
      - POSTGRES_USER=locations_inside_prison
      - POSTGRES_DB=locations_inside_prison

  prison-api:
    image: wiremock/wiremock:latest
    container_name: prison-api
    ports:
      - "8091:8081"
    volumes:
      - $PWD/wiremock-docker:/home/wiremock
    command: --verbose --global-response-templating --port=8081

  prisoner-search:
    image: wiremock/wiremock:latest
    networks:
      - hmpps
    container_name: prisoner-search
    ports:
      - "8083:8080"
    volumes:
      - ./wiremock:/home/wiremock

  redis:
    image: 'redis:8.0'
    networks:
      - hmpps
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  prison-register:
    image: quay.io/hmpps/prison-register:latest
    container_name: prison-register
    ports:
      - "8084:8080"
    depends_on:
      - hmpps-auth
      - prison-register-db
      - localstack
    networks:
      - hmpps
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - API_BASE_URL_OAUTH=http://hmpps-auth:8080/auth
      - SPRING_DATASOURCE_URL=jdbc:postgresql://prison-register-db:5432/prison-register?sslmode=prefer
      - HMPPS_SQS_LOCALSTACK_URL=http://localstack:4566

  prison-register-db:
    image: postgres:16
    networks:
      - hmpps
    container_name: prison-register-db
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=prison-register
      - POSTGRES_USER=prison-register
      - POSTGRES_DB=prison-register

  app:
    build:
      context: .
      args:
        BUILD_NUMBER: "1.0.0"
        GIT_REF: "a1b2c3"
        GIT_BRANCH: main
    network_mode: "host"
    depends_on:
      - manage-users-api
      - hmpps-auth
      - locations-inside-prison-api
    profiles:
      - include-frontend
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:3000/health"]
    environment:
      - PRODUCT_ID=UNASSIGNED
      - REDIS_HOST=localhost
      - REDIS_ENABLED=true
      - HMPPS_AUTH_EXTERNAL_URL=http://localhost:8080/auth
      - HMPPS_AUTH_URL=http://localhost:8080/auth
      - MANAGE_USERS_API_URL=http://localhost:8082
      - AUTH_CODE_CLIENT_ID=hmpps-locations-inside-prison
      - AUTH_CODE_CLIENT_SECRET=clientsecret
      - CLIENT_CREDS_CLIENT_ID=hmpps-locations-inside-prison-system
      - CLIENT_CREDS_CLIENT_SECRET=clientsecret
      - SESSION_SECRET=somesecretvalue
      - TOKEN_VERIFICATION_API_URL=http://hmpps-auth:8080/auth
      - TOKEN_VERIFICATION_ENABLED=false
      - INGRESS_URL=http://localhost:3000
      - COMPONENT_API_URL=http://not-used-in-local-dev
      - COMMON_COMPONENTS_ENABLED=false
      - DPS_URL=http://localhost:3000
      - LOCATIONS_API_URL=http://localhost:8090
      - PRISON_API_URL=http://localhost:8091
      - NO_HTTPS=true
      - LOAD_DPR_ON_STARTUP=false

networks:
  hmpps:
