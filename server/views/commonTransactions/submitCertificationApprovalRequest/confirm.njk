{% extends "../../partials/formStep.njk" %}

{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/table/macro.njk" import govukTable %}

{% macro renderCertificationApprovalRequest(request, multiple, index) %}
  {% if request.approvalType == 'SIGNED_OP_CAP' %}
    {% set changeType = 'Change signed operational capacity' %}
  {% elseif request.approvalType == 'DRAFT' %}
    {% set changeType = 'Add new locations to certificate' %}
  {% elseif request.approvalType == 'DEACTIVATION' %}
  {% elseif request.approvalType == 'REACTIVATION' %}
  {% elseif request.approvalType == 'CAPACITY_CHANGE' %}
  {% endif %}

  <div data-qa="approval-request-{{ request.approvalType }}">
    <div class="govuk-grid-column-two-thirds">
      {% if multiple %}
        <h2 class="govuk-heading-m">Change {{ index + 1 }} - {{ changeType }}</h2>
      {% endif %}
    </div>

    {% if request.approvalType == 'SIGNED_OP_CAP' %}
      <div class="govuk-grid-column-two-thirds">
        {{ govukSummaryList({
          attributes: {
            'data-qa': 'overview-list'
          },
          rows:[
          {
            key: { text: 'Location' },
            value: { text: request.prisonId }
          },
          {
            key: { text: 'Change type' },
            value: { text: changeType }
          },
          {
            key: { text: 'Explanation' },
            value: { text: request.reasonForSignedOpChange }
          }
        ]
        }) }}

        <h3 class="govuk-heading-s">Proposed changes to the certificate</h3>

        {{ govukTable({
          attributes: {
            'data-qa': 'cap-change-table'
          },
          head: [
            { text: "Location", classes: "govuk-!-width-one-third" },
            { text: "Signed operational capacity", classes: "govuk-!-width-two-thirds" }
          ],
          rows: [[
            { text: request.prisonId },
            { text: prisonResidentialSummary.prisonSummary.signedOperationalCapacity + " â†’ " + (prisonResidentialSummary.prisonSummary.signedOperationalCapacity + request.signedOperationCapacityChange) }
          ]]
        }) }}
      </div>
    {% elseif request.approvalType == 'DRAFT' %}
      <div class="govuk-grid-column-two-thirds">
        {% if multiple %}
          <h3 class="govuk-heading-s">Proposed changes to the certificate</h3>
        {% else %}
          <h2 class="govuk-heading-m">Proposed changes to the certificate</h2>

          <h3 class="govuk-heading-s">New wing usage</h3>
        {% endif %}

        {{ govukTable({
          attributes: {
            'data-qa': 'wing-table'
          },
          head: [
            { text: "Location" },
            { text: "Accommodation type" },
            { text: "Used for" }
          ],
          rows: [[
            { text: request.locations[0].pathHierarchy },
            { text: formatConstants(accommodationTypeConstants, request.locations[0].accommodationTypes) },
            { text: formatConstants(usedForConstants, request.locations[0].usedFor) }
          ]]
        }) }}

        {% if not multiple %}
          <h3 class="govuk-heading-s">New locations</h3>
        {% endif %}
      </div>

      {% set locationTableRows = [] %}
      {% for location in request.locations %}
        {% set locationTableRows = (locationTableRows.push([
          {
            text: location.pathHierarchy
          },
          {
            text: location.cellMark or '-'
          },
          {
            text: location.pendingChanges.certifiedNormalAccommodation or '-'
          },
          {
            text: location.pendingChanges.workingCapacity or '-'
          },
          {
            text: location.pendingChanges.maxCapacity or '-'
          },
          {
            html: formatConstants(specialistCellTypesObject, location.specialistCellTypes) or '-'
          },
          {
            text: 'Yes' if location.inCellSanitation == true else ('No' if location.inCellSanitation == false else '-')
          }
        ]), locationTableRows) %}
      {% endfor %}

      <div class="govuk-grid-column-full">
        {{ govukTable({
          attributes: {
            'data-qa': 'locations-table'
          },
          head: [
            { text: "Location code" },
            { text: "Door number" },
            { text: "Baseline CNA" },
            { text: "Certified working capacity" },
            { text: "Maximum capacity" },
            { text: "Cell type" },
            { text: "Sanitation" }
          ],
          rows: locationTableRows,
          firstCellIsHeader: true
        }) }}
      </div>
    {% elseif request.approvalType == 'DEACTIVATION' %}
    {% elseif request.approvalType == 'REACTIVATION' %}
    {% elseif request.approvalType == 'CAPACITY_CHANGE' %}
    {% endif %}
  </div>
{% endmacro %}

{% block content %}
  <div class="govuk-width-container">
    <div class="govuk-grid-row">
      <div class="govuk-grid-column-two-thirds">
        <p>
          This request will be reviewed by the establishment's authorising director. If approved, the cell certificate
          will be updated with this change.
        </p>

        <p>You will be unable to make changes to these locations while the request is being reviewed.</p>

        {{ govukInsetText({
          text: "New locations will change status from draft to inactive if approved."
        }) }}
      </div>

      {% set i = 0 %}
      {% for request in proposedCertificationApprovalRequests %}
        {{ renderCertificationApprovalRequest(request, proposedCertificationApprovalRequests.length > 1, i) }}
        {% set i = i + 1 %}
      {% endfor %}
    </div>
  </div>


  {{ super() }}
{% endblock %}
