{% extends "../../partials/layout.njk" %}

{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/warning-text/macro.njk" import govukWarningText %}

{% set formattedLocationType = locationType | lower | capFirst %}
{% set title = "Check and confirm the " + ('location' if values.createCellsNow == 'YES' else locationType | lower) + " details" %}

{% block beforeContent %}
  <div class="govuk-width-container">
    {{ govukBackLink({
      text: "Back",
      href: backLink
    }) }}

    {% if errorlist.length %}
      {{ govukErrorSummary({
        titleText: "There is a problem",
        errorList: errorlist
      }) }}
    {% endif %}
  </div>
{% endblock %}

{% block heading %}
  <div class="govuk-grid-row govuk-!-margin-bottom-0">
    <div class="govuk-grid-column-two-thirds">
      <span class="govuk-caption-m" data-qa="cell-name">
        Create new {{ 'locations' if values.createCellsNow == 'YES' else locationType | lower }}
      </span>
      <h1 class="govuk-heading-l">
        {{ title }}
      </h1>
    </div>
  </div>
{% endblock %}

{% block content %}

  {% set formMethod = options.method | default('post') %}
  {% set formAction = options.action | default('') %}
  {% set formEnctype = options.enctype | default('') %}

  <div class="govuk-width-container">
    <div class="govuk-grid-row">
      <div class="govuk-grid-column-two-thirds">
        {% if locationType == 'WING' %}
          <p class="govuk-body"> You are about to create a new wing.</p>
          <p class="govuk-body"> You can add {{ createYouCanAddText | lower }} to the wing once it is created.</p>

          {{ govukSummaryList({
            card: {
              title: {
                text: "Wing details"
              }
            },
            rows: [
              {
                key: { text: "Wing code" },
                value: { text: values.locationCode },
                actions: {
                  items: [
                    {
                      href: createDetailsLink,
                      text: "Change",
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
              },
              {
                key: { text: "Local name" },
                value: { text: values.localName or 'Not set' },
                actions: {
                  items: [
                    {
                      href: createDetailsLink,
                      text: "Change",
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
              },
              {
                key: { text: "Wing structure" },
                value: { text: decoratedLocationStructure },
                actions: {
                  items: [
                    {
                      href: createStructureLink,
                      text: "Change",
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
              }
            ],
            attributes: {
              'data-qa': 'location-details-summary'
            }
          }) }}
        {% else %}
          {{ govukSummaryList({
            card: {
              title: {
                text: formattedLocationType + " details"
              },
              actions: {
                items: [
                  {
                    text: 'Change',
                    href: createDetailsLink,
                    classes: "govuk-link--no-visited-state"
                  }
                ]
              }
            },
            rows: [
              {
                key: { text: formattedLocationType + " code" },
                value: { text: decoratedResidentialSummary.location.pathHierarchy + '-' + values.locationCode }
              },
              {
                key: { text: "Local name" },
                value: { text: values.localName or 'Not set' }
              },
              {
                key: { text: "Create cells on " + formattedLocationType | lower + " now" },
                value: { text: 'No' }
              } if values.createCellsNow == 'NO'
            ],
            attributes: {
              'data-qa': 'location-details-summary'
            }
          }) }}

          {% if values.createCellsNow == 'YES' %}
            {{ govukSummaryList({
              card: {
                title: {
                  text: "Cell details"
                }
              },
              rows: summaryListRows,
              attributes: {
                'data-qa': 'cell-details-summary'
              }
            }) }}


            {% set cellRows = [] %}

            {% for i in range(0, values['create-cells_cellsToCreate']) -%}
              {% set cellTypes = values['saved-cellTypes' + i] %}
              {% set cellTypesText = formatConstants(specialistCellTypesObject, cellTypes) %}

              {% set cellRows = (cellRows.push([
                {
                  text: locationPathPrefix + '-' + values['create-cells_cellNumber' + i].padStart(3, '0')
                },
                {
                  text: values['create-cells_doorNumber' + i]
                },
                {
                  text: values['create-cells_baselineCna' + i]
                },
                {
                  text: values['create-cells_workingCapacity' + i]
                },
                {
                  text: values['create-cells_maximumCapacity' + i]
                },
                {
                  html: cellTypesText
                },
                {
                  text: 'Yes' if (values['create-cells_bulkSanitation'] == 'YES' or not values['create-cells_withoutSanitation'].includes(i.toString())) else 'No'
                }
              ]), cellRows) %}
            {% endfor %}

            {{ govukTable({
              caption: "Cell information",
              captionClasses: "govuk-table__caption--m",
              attributes: {
                "data-qa": "cell-information-table"
              },
              head: [
                { html: "Cell number<br><a href='" + createRootLink + "/create-cells/cell-numbers/edit' class='govuk-link govuk-link--no-visited-state'>Change</a>" },
                { html: "Cell door number<br><a href='" + createRootLink + "/create-cells/door-numbers/edit' class='govuk-link govuk-link--no-visited-state'>Change</a>" },
                { html: "Baseline CNA<br><a href='" + createRootLink + "/create-cells/capacities/edit' class='govuk-link govuk-link--no-visited-state'>Change</a>" },
                { html: "Working capacity<br><a href='" + createRootLink + "/create-cells/capacities/edit' class='govuk-link govuk-link--no-visited-state'>Change</a>" },
                { html: "Maximum capacity<br><a href='" + createRootLink + "/create-cells/capacities/edit' class='govuk-link govuk-link--no-visited-state'>Change</a>" },
                { html: "Cell type<br><a href='" + createRootLink + "/create-cells/capacities/edit' class='govuk-link govuk-link--no-visited-state'>Change</a>" },
                { html: "Sanitation<br><a href='" + createRootLink + "/create-cells/bulk-sanitation/edit' class='govuk-link govuk-link--no-visited-state'>Change</a>" }
              ],
              rows: cellRows
            }) }}
          {% endif %}
        {% endif %}

        {{ govukWarningText({
          text: "This location will be in draft until it is added to the cell certificate.",
          iconFallbackText: "Warning"
        }) }}

        <form method="{{ formMethod }}" action="{{ formAction }}"
          {% if formEnctype %}
            enctype="{{ formEnctype }}"
          {% endif %}
        >

          {% if formMethod == 'post' %}
            <input type="hidden" name="_csrf" value="{{ csrfToken }}">
          {% endif %}

          <div class="govuk-button-group">
            {% block formActions %}
              {% block submitAction %}
                {{ govukButton({
                  text: "Create " + ('locations' if values.createCellsNow == 'YES' else locationType | lower),
                  classes: options.buttonClasses,
                  preventDoubleClick: true,
                  type: "submit"
                }) }}
              {% endblock %}
            {% endblock %}
          </div>
        </form>

        <p class="govuk-body">
          <a href="{{ cancelLink }}" class="govuk-link govuk-link--no-visited-state">
            Cancel and return to location details
          </a>
        </p>
      </div>
    </div>
  </div>
{% endblock %}
