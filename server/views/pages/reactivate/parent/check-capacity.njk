{% extends "../../../partials/formStep.njk" %}

{% from "govuk/components/table/macro.njk" import govukTable %}

{% macro capacityTable(decoratedLocationTree) %}
  {% set cells = decoratedLocationTree.filter(propEquals.bind(null, 'decoratedLocation.raw.locationType', 'CELL')) %}
  {% if cells | length %}
    {% set rows = [] %}
    {% for cellData in cells %}
      {% set cell = cellData.decoratedLocation %}
      {% set workingCapacity = (cell.oldWorkingCapacity or 0) | string %}
      {% set maxCapacity = (cell.capacity.maxCapacity or 0) | string %}
      {% if values.capacityChanges and values.capacityChanges[cell.id] %}
        {% if values.capacityChanges[cell.id].workingCapacity %}
          {% set workingCapacity = values.capacityChanges[cell.id].workingCapacity %}
        {% endif %}
        {% if values.capacityChanges[cell.id].maxCapacity %}
          {% set maxCapacity = values.capacityChanges[cell.id].maxCapacity %}
        {% endif %}
      {% endif %}

      {% set rows = (rows.push(
        [
          { text: cell.pathHierarchy },
          { html: workingCapacity },
          { html: maxCapacity },
          { html: '<a href="/reactivate/parent/' + decoratedLocation.id + '/change-capacity/' + cell.id  + '" id="' + cell.id + '">Change</a>' }
        ]
      ), rows) %}
    {% endfor %}

    {{ govukTable({
      attributes: {
        "data-qa": "locations-table"
      },
      head: [
        { text: "Location" },
        { text: "Working capacity" },
        { text: "Maximum capacity" },
        { text: "Action" }
      ],
      rows: rows
    }) }}
  {% else %}
    {% for subData in data.decoratedSubLocations %}
      {{ explodeLocation(subData, false) }}
    {% endfor %}
  {% endif %}
{% endmacro %}

{% macro explodeLocation(data, topLevel) %}
  <h{{ 2 if topLevel else 3 }} class="govuk-heading-{{ "m" if topLevel else "s" }}">
    {{ data.decoratedLocation.displayName | capFirst }}
  </h{{ 2 if topLevel else 3 }}>

  {{ capacityTable(data.decoratedSubLocations) }}
{% endmacro %}

{% block fields %}
  {% if locationResidentialSummary.subLocationName == 'Cells' %}
    {{ capacityTable(decoratedLocationTree) }}
  {% else %}
    {% for data in decoratedLocationTree %}
      {{ explodeLocation(data, true) }}
    {% endfor %}
  {% endif %}
{% endblock %}
